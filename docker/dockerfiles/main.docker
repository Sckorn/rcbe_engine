# main docker file used for basic enviroment setup for bazel build

FROM ubuntu:latest

ENV LANG=C.UTF-8 \
    LC_ALL=C.UTF-8 \
    TZ=Europe/Moscow \
    TERM=xterm \
    PYTHONIOENCODING=UTF-8 

RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

RUN mv /bin/sh /bin/sh-old && \
    ln -s /bin/bash /bin/sh && \
    # install packages
    apt-get -qq update && \
    apt-get install --fix-missing -q -y \
        dirmngr \
        gnupg2 \
        wget \
        pkg-config \
        zip \
        g++ \
        zlib1g-dev \
        unzip \
        python \
        bash-completion \
        default-jdk \
        software-properties-common \
        python-jinja2 \
        libpython3.6-minimal \
        libpython3.6-stdlib \
        python3.6 \ 
        python3.6-minimal \
        curl \ 
        tmux \ 
        iputils-ping \ 
        net-tools \
        nano \
        vim \ 
        vim-pathogen \ 
        vim-fugitive \ 
        vim-syntastic \
        libnotify4 \ 
        libxkbfile1 \ 
        libsecret-1-0 \ 
        libgtk-3-0 \ 
        libxss1 \
        gpicview \ 
        python-pip \ 
        meld \ 
        freecad \ 
        python-tk \
        build-essential \
        # libraries
        libgtkmm-3.0-dev \
        libvtk7-dev \
        libboost-all-dev \
        libbullet-dev \
        libgmp-dev \
        libmpfr-dev \
        # binaries
        python3.6 \
        git \
        glade \
        # utlities
        tmux \
        cmake \
        gnupg2 \
        sudo \
        git \
        pkg-config \
        libxau-dev \
        libxdmcp-dev \
        libxcb1-dev \
        libxext-dev \
        libx11-dev \
        tzdata \
        freeglut3-dev \
        mesa-utils \
        libglew-dev \ 
        libsdl2-dev \ 
        libsdl2-image-dev \
        libglm-dev \
        libfreetype6-dev \
        lsb-release && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

RUN add-apt-repository ppa:ubuntu-toolchain-r/test && \
    apt-get -qq update && \
    apt-get -y -qq install \
            gcc-9 \
            g++-9 \
    && rm -rf /var/lib/apt/lists/*

RUN  update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 150 \
                        --slave   /usr/bin/g++ g++ /usr/bin/g++-9


ENV BAZEL_VERSION=3.0.0

#
# Install Bazel
#

# Original link:
RUN BAZEL_DOWNLOAD_URL="https://github.com/bazelbuild/bazel/releases/download/${BAZEL_VERSION}/bazel_${BAZEL_VERSION}-linux-x86_64.deb"; \
    wget --output-document=/tmp/bazel.deb --tries=3 --continue --no-verbose "${BAZEL_DOWNLOAD_URL}" && \
    dpkg -i /tmp/bazel.deb && \
    rm /tmp/bazel.deb

RUN VSC_DOWNLOAD_URL=https://go.microsoft.com/fwlink/?LinkID=760868 && \
	wget --output-document=/tmp/vscode.deb --tries=3 --continue --no-verbose "${VSC_DOWNLOAD_URL}" && \ 
	dpkg -i /tmp/vscode.deb && \
    rm /tmp/vscode.deb

ENV CLION_VERSION=2019.3.5

RUN CLION_DOWNLOAD_URL="https://download.jetbrains.com/cpp/CLion-${CLION_VERSION}.tar.gz"; \
    wget --output-document=/tmp/clion.tar.gz --tries=3 --continue --no-verbose "${CLION_DOWNLOAD_URL}" && \
    mkdir -p /opt/clion && \
    tar --gzip -xf /tmp/clion.tar.gz --strip-components=1 -C /opt/clion && \
    rm /tmp/clion.tar.gz && \
    sed -i 's/^-Xmx.*$/-Xmx4000m/' /opt/clion/bin/clion64.vmoptions && \
    echo 'idea.system.path=${user.home}/clion' >> /opt/clion/bin/idea.properties && \
    echo 'idea.config.path=${user.home}/.CLion/config' >> /opt/clion/bin/idea.properties

RUN pip install --no-cache-dir scipy==1.2.0 numpy==1.16.1 scikit-learn==0.20.3 matplotlib==2.2.3 pwlf plyfile protobuf pyhocon tornado

RUN groupdel dialout

COPY entrypoint.sh /entrypoint.sh

COPY start_storage.sh /start_storage.sh

ENV CC=/usr/bin/gcc-9 \
    CXX=/usr/bin/g++-9

#
# Install CGAL
#

RUN cd /tmp/ && \
	git clone https://github.com/CGAL/cgal.git && \
	cd cgal && \
	mkdir build && \
	cd build && \
	cmake .. && \
	make install clean	

# Setup timezone

RUN ln -nfs /usr/share/zoneinfo/$TZ /etc/localtime && \
    echo "$TZ" > /etc/timezone && \
    dpkg-reconfigure -f noninteractive tzdata

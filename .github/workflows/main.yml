name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  release:
    types: [ created ]
    branches: [ master ]

jobs:

  build-test-deploy: # done in a single job to save time, since splitting these into three separate jobs makes the overall time 5 times bigger
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    # Due to github actions making installing bleeding edge compilers impossible
    # and thirdparty actions, only providing GCC 11 and Clang 13, I had to remove clang build
    # and leave only GCC 11 build.
    # Locally I build with both GCC 12.2 and Clang 14

    - name: Set up GCC
      uses: egor-tensin/setup-gcc@v1
      with:
        version: 11
        platform: x64

    - name: install OpenGL
      run: sudo apt-get update && sudo apt-get install libglu1-mesa-dev freeglut3-dev mesa-common-dev libglm-dev

    - name: bazel-build
      env:
        CC: /usr/bin/gcc-11
        CXX: /usr/bin/g++-11
      run: bazel build --build_tag_filters=-local //...

    - name: bazel-test
      env:
        CC: /usr/bin/gcc-11
        CXX: /usr/bin/g++-11
      run: bazel test --test_tag_filters=-local --build_tag_filters=-local --test_output=all //...

    - name: deploy-packages
      if: ${{ github.event_name == 'release' }}
      env:
        CC: /usr/bin/gcc-11
        CXX: /usr/bin/g++-11
      run: python3 deploy_packages.py

    - uses: actions/upload-artifact@v2
      env:
        engine_version: "0.0.4"
        target_architecture: "amd64"
      with:
        name: ${{ format('rcbe_engine_{0}_{1}_{2}', env.engine_version, env.target_architecture, github.sha) }}
        path: ${{ format('/tmp/rcbe_engine_{0}_{1}.tar.gz', env.engine_version, env.target_architecture) }}
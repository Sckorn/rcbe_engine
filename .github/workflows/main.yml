name: GCC and Clang, Vulkan and OpenGL, build and test

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  release:
    types: [ created ]
    branches: [ master ]

jobs:
  clang-18-opengl-build-test:
    runs-on: ubuntu-latest
    container:
      image: radameon/build:clang-18
      #ports: # left here for quick reference, do no t remove
      #  - 80
      #volumes:
      #  - my_docker_volume:/volume_mount
      options: --cpus 2
    steps:
      - uses: actions/checkout@v4

      - name: Check for dockerenv file
        run: (ls /.dockerenv && echo Found dockerenv) || (echo No dockerenv)

      - name: Print bazel version
        run: bazel --version

      - name: bazel-build
        env:
          CC: /usr/bin/clang-18
          CXX: /usr/bin/clang++-18
        run: bazel build --build_tag_filters=-local --//meta_package:rdmn_rasterizer_back=opengl --config=linux //...

      - name: bazel-test
        env:
          CC: /usr/bin/clang-18
          CXX: /usr/bin/clang++-18
        run: bazel test --test_tag_filters=-local --build_tag_filters=-local --//meta_package:rdmn_rasterizer_back=opengl --config=linux --test_output=all //...

  gcc-14-vulkan-build-test:
    runs-on: ubuntu-latest
    container:
      image: radameon/build:gcc-14
      #ports: # left here for quick reference, do no t remove
      #  - 80
      #volumes:
      #  - my_docker_volume:/volume_mount
      options: --cpus 2
    steps:
      - uses: actions/checkout@v4

      - name: Check for dockerenv file
        run: (ls /.dockerenv && echo Found dockerenv) || (echo No dockerenv)

      - name: Print bazel version
        run: bazel --version

      - name: bazel-build
        env:
          CC: /usr/bin/gcc-14
          CXX: /usr/bin/g++-14
        run: bazel build --build_tag_filters=-local --//meta_package:rdmn_rasterizer_back=vulkan --config=linux //...

      - name: bazel-test
        env:
          CC: /usr/bin/gcc-14
          CXX: /usr/bin/g++-14
        run: bazel test --test_tag_filters=-local --build_tag_filters=-local --//meta_package:rdmn_rasterizer_back=vulkan --test_output=all --config=linux //...

  clang-18-vulkan-build-test:
    runs-on: ubuntu-latest
    container:
      image: radameon/build:clang-18
      #ports: # left here for quick reference, do no t remove
      #  - 80
      #volumes:
      #  - my_docker_volume:/volume_mount
      options: --cpus 2
    steps:
      - uses: actions/checkout@v4

      - name: Check for dockerenv file
        run: (ls /.dockerenv && echo Found dockerenv) || (echo No dockerenv)

      - name: Print bazel version
        run: bazel --version

      - name: bazel-build
        env:
          CC: /usr/bin/clang-18
          CXX: /usr/bin/clang++-18
        run: bazel build --build_tag_filters=-local --//meta_package:rdmn_rasterizer_back=vulkan --config=linux //...

      - name: bazel-test
        env:
          CC: /usr/bin/clang-18
          CXX: /usr/bin/clang++-18
        run: bazel test --test_tag_filters=-local --build_tag_filters=-local --//meta_package:rdmn_rasterizer_back=vulkan --test_output=all --config=linux //...

      - name: deploy-packages
        if: ${{ github.event_name == 'release' }}
        env:
          CC: /usr/bin/clang-18
          CXX: /usr/bin/clang++-18
        run: python3 deploy_packages.py # replace with corresponding gen rule

      - uses: actions/upload-artifact@v4
        env:
          engine_version: "0.1.0"
          target_architecture: "amd64"
        with:
          name: ${{ format('rcbe_engine_{0}_{1}_{2}', env.engine_version, env.target_architecture, github.sha) }}
          path: ${{ format('/tmp/rcbe_engine_{0}_{1}.tar.gz', env.engine_version, env.target_architecture) }}

load("@rules_pkg//:pkg.bzl", "pkg_deb", "pkg_tar")
load("//meta_package:global_variables.bzl", "ENGINE_VERSION_MAJOR")
load("//meta_package:global_variables.bzl", "ENGINE_VERSION_MINOR")
load("//meta_package:global_variables.bzl", "ENGINE_VERSION_PATCH")
load("//meta_package:global_variables.bzl", "ENGINE_VERSION_FULL")
load("//meta_package:global_variables.bzl", "TARGET_ARCH")
load("//meta_package:global_variables.bzl", "BOOST_TARGET_VERSION")
load("//meta_package:global_variables.bzl", "PROJECT_URL")
load("//meta_package:global_variables.bzl", "PROJECT_MAINTAINER")

py_binary(
    name = "engine_config_header_generator",
    srcs = ["generate_engine_config_h.py"],
    main = "generate_engine_config_h.py",
    visibility = ["//visibility:public"],
)

genrule(
    name = "engine_config",
    outs = ["rcbe_engine_config.h"],
    cmd = """
    python3 $(location //meta_package:engine_config_header_generator) -M {} -m {} -p {} -u '{}' -o '{}'
    cp rcbe_engine_config.h $@
    """.format(ENGINE_VERSION_MAJOR, ENGINE_VERSION_MINOR, ENGINE_VERSION_PATCH, PROJECT_URL, PROJECT_MAINTAINER),
    tools = [":engine_config_header_generator"],
    visibility = ["//visibility:public"],
)

### packaging

## Header

pkg_tar(
    name = "engine-config-data",
    srcs = [
        "//meta_package:engine_config",
    ],
    mode = "0644",
    package_dir = "/usr/local/lib/rcbe/rcbe-engine/",
)

pkg_tar(
    name = "engine-config-package-data",
    extension = "tar.gz",
    visibility = ["//visibility:public"],
    deps = [
        ":engine-config-data",
    ],
)

pkg_deb(
    name = "engine-config-deb",
    architecture = TARGET_ARCH,
    built_using = "unzip (6.0.1)",
    data = ":engine-config-package-data",
    description = "RCBE game engine autogenerated config header file",
    homepage = PROJECT_URL,
    maintainer = PROJECT_MAINTAINER,
    package = "rcbe_engine_config",
    version = ENGINE_VERSION_FULL,
)
